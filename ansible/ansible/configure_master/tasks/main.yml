---
# tasks file for configure_master
- name: "PUERTOS - Configuracion del firewall"
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
  with_items:
    - 6443/tcp
    - 2379-2380/tcp
    - 10250/tcp
    - 10251/tcp
    - 10252/tcp
    - 10255/tcp
  become: true

- name: "IP DOCKER - Captura del a IP de la interfaz de docker"
  shell: "/sbin/ifconfig eth0 | awk -F ' *|:' '/inet /{print $3}'"
  register: docker_ip
  become: true

- name: "DEBUG - IP DOCKER"
  debug:
    var: docker_ip

- name: "REGLAS - Configuracion del firewall"
  firewalld:
    rich_rule: "{{ item }}"
    permanent: true
    state: enabled
  with_items:
    - "rule family=ipv4 source address=10.0.1.11/32 accept"
    - "rule family=ipv4 source address=10.0.1.12/32 accept"
    - 'rule family=ipv4 source address={{ docker_ip.stdout }}/16 accept'
  become: true

# Reiniciamos servicio para que capture los cambios
- name: "FIREWALLD"
  service:
    name: firewalld
    state: reloaded
  become: true

- name: "Pull de las imagenes de kubernetes"
  command: "kubeadm config images pull"
  register: images_pull
  become: true

- name: "DEBUG - pull imagenes de kubernetes"
  fail:
    msg: "ERROR - Se produjo un error en el pull de las imagenes"
  when: images_pull.rc != 0

- name: "Despliegue de Kubernetes"
  command: "kubeadm init --pod-network-cidr 192.169.0.0/16"
  register: kube_output
  become: true

- name: "Generacion de comando join"
  command: "kubeadm token create --print-join-command"
  register: kube_join
  become: true

- name: "OUTPUT - comando kubeadm"
  local_action: copy content={{ kube_join.stdout_lines[0] }} dest=/home/pablo/ansible/kubeadm.txt

- name: "DEBUG - despliegue de kubernetes"
  fail:
    msg: "ERROR - Se produjo un error en el despliegue de kubernetes"
  when: kube_output.rc != 0

- name: "Insertamos el path de kubeconfig"
  lineinfile:
    path: /root/.bash_profile
    line: "export KUBECONFIG=/etc/kubernetes/admin.conf"
  become: true

- name: "Generar el path /root/.kube"
  file:
    path: /root/.kube
    state: directory
    owner: root
    group: root
  become: true

- name: "Copiar fichero de configuracion al path de root"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
  become: true

- name: "Testing del comando kubectl"
  command: "kubectl get nodes"
  register: kubectl_test
  become: true

- name: "DEBUG - testing del comando kubectl"
  fail:
    msg: "ERROR - Se ha producido un error en el testing del kubectl"
  when: kubectl_test.rc != 0

